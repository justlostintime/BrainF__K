// C compiler Preamble
#include <unistd.h>
#include <termios.h>
#include <stdio.h>


/* Initialize new terminal i/o settings */
static struct termios old, new1;
void initTermios(int echo) {
    tcgetattr(0, &old); /* grab old terminal i/o settings */
    new1 = old; /* make new settings same as old settings */
    new1.c_lflag &= ~ICANON; /* disable buffered i/o */
    new1.c_lflag &= echo ? ECHO : ~ECHO; /* set echo mode */
    tcsetattr(0, TCSANOW, &new1); /* use these new terminal i/o settings now */
}

/* Restore old terminal i/o settings */
void resetTermios(void) {
    tcsetattr(0, TCSANOW, &old);
}

int readchar() {
  initTermios(0);
  int  a ;
  a = getchar();
  if (a == 13 | a == 10) a = 0;
  resetTermios();
  return a;
}

unsigned char storage[1000000];                    // about a meg of storage
unsigned char *dp = storage;                       // pointer to current location in storage

int main() {
int i = 0;                                         // counter used in multi char outputs
printf("Begin Binary execution C code source\n");
